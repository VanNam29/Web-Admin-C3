import Head from "next/head";
import React, { FC, ReactElement } from "react";
import { Header } from "../header/header";
import { NavigationMenu } from "../navigation-menu/navigation-menu";
import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import { useRouter } from "next/router";
import styles from "./layout.module.css";
import { useState } from "react";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import {
  faCog,
  faSignOutAlt,
  faUserTie,
} from "@fortawesome/free-solid-svg-icons";
import { useAuth } from "../../utils/contexts/auth-context";
import nookies from "nookies";

interface Props {
  children: ReactElement;
  title: string;
}

export const MainLayout: FC<Props> = ({ children, title }) => {
  const [isShowNav, setIsShowNav] = useState(true);
  const [isOptionUser, setIsOptionUser] = useState(false);
  const router = useRouter();
  const { logout } = useAuth();

  const handleShowNavigation = (isShow): void => {
    console.log(isShow);
    setIsShowNav(isShow);
  };

  const handleHiddenNav = () => {
    setIsShowNav(false);
  };

  const handleOptionUser = () => {
    setIsOptionUser(!isOptionUser);
  };

  const hiddenOptionUser = () => {
    if (isOptionUser) {
      setIsOptionUser(false);
    }
  };

  const handleLogout = async () => {
    try {
      await logout();

      router.push("/login");
    } catch (error) {}
  };

  return (
    <div className="">
      <Head>
        <title>{title}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main
        className={`${styles.main} w-screen bg-gray-200 transition duration-200 ease-in-out relative`}
      >
        <div
          className={`${styles.navigation} 
                    ${isShowNav ? "mobile:w-2/3 mobile:z-10" : "mobile:w-0"}   
                    ${isShowNav ? "tablet:w-1/3" : "tablet:w-0"}   
                    ${isShowNav ? "laptop:w-1/6" : "laptop:w-0"} 
                    h-screen bg-white float-left shadow-md absolute left-0 inset-y-0 transition duration-200 ease-in-out`}
        >
          <NavigationMenu isShowNav={isShowNav} />
        </div>
        <div
          className={`${styles.header} 
            ${isShowNav ? "mobile:w-3/4" : "mobile:w-full"} 
            ${isShowNav ? "tablet:w-2/3" : "tablet:w-full"} 
            ${isShowNav ? "laptop:w-5/6" : "laptop:w-full"} 
            bg-white float-right shadow-md h-48`}
        >
          <Header
            handleShowNavigation={handleShowNavigation}
            isShowNav={isShowNav}
            handleOptionUser={handleOptionUser}
          />
        </div>

        <div
          className={`
          ${isShowNav ? "mobile:w-full" : "mobile:w-full"} 
            ${isShowNav ? "tablet:w-4/5" : "tablet:w-full"} 
            ${isShowNav ? "laptop:w-5/6" : "laptop:w-w-full"} 
           float-right`}
        >
          {children}
        </div>

        <div
          onClick={handleHiddenNav}
          className={`${styles.overlay} ${
            isShowNav ? "mobile:block mobile:w-1/3" : "mobile:hidden"
          } ${styles.overlay} ${isShowNav ? "tablet:w-2/3" : "mobile:hidden"} 
            ${isShowNav ? "laptop:hidden" : "laptop:hidden"} w-1/3`}
        ></div>

        {isOptionUser ? (
          <div
            className={`w-180 top-1 right-1 mt-48 bg-white absolute rounded-4 border-solid border-2 border-gray-300`}
            // onCl={hiddenOptionUser}
          >
            <div className="w-full h-36 hover:bg-gray-100 p-4" role="button">
              <FontAwesomeIcon
                icon={faCog}
                className="text-gray-400 ml-20 text-16"
              />
              <span className="text-gray-500 text-14 ml-8">Setting</span>
            </div>
            <div className="w-full h-36 hover:bg-gray-100 p-4" role="button">
              <FontAwesomeIcon
                icon={faUserTie}
                className="text-gray-400 ml-20 text-16"
              />
              <span className="text-gray-500 text-14 ml-8">Profile</span>
            </div>
            <div
              className="w-full h-36 hover:bg-gray-100 p-4"
              role="button"
              onClick={handleLogout}
            >
              <FontAwesomeIcon
                icon={faSignOutAlt}
                className="text-gray-400 ml-20 text-16"
              />
              <span className="text-gray-500 text-14 ml-8">Logout</span>
            </div>
          </div>
        ) : null}
      </main>

      <ToastContainer></ToastContainer>
    </div>
  );
};
